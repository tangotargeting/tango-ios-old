{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww14320\viewh10580\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \'97\'97\'97\'97 Description \'97\'97\'97\'97\'97\
\
\'97\'97\'97\'97 Optain API Key \'97\'97\'97\'97\'97\
\
\'97\'97\'97\'97 Instalation \'97\'97\'97\'97\'97\
\
Manually:\
You should add to your project Publistats.framework and Publistats.bundle files from here [https://bitbucket.org/tango-team/tango-ios-sample.git] by drag and drop. After that follow "How to use" guide.\
\
Add framework using CocoaPods:\
CocoaPods is a dependency manager for Objective-C, which automates and simplifies the process of using 3rd-party libraries in your projects. See the "Getting Started" guide ({\field{\*\fldinst{HYPERLINK "https://guides.cocoapods.org/using/getting-started.html"}}{\fldrslt https://guides.cocoapods.org/using/getting-started.html}}) for more information. You can install it with the following command:\
\
$ gem install cocoapods\
\
After installing go to your project directory and type this commad:\
\
$ pod init\
\
In project folder it will appear a file called Podfile. Open it and integrate Publistats by typing:\
\
target 'TargetName' do\
pod 'Publistats', :git => 'https://bitbucket.org/tango-team/tango-ios-sample.git'\
\
end\
\
After filling Podfile save it and run following command:\
\
$ pod install\
\
Close your project , go to your project location on disk and open the workspace (yourProjectName.xcworkspace). Now the framework can be used, and for that please follow "How to use" guide.\
\
\'97\'97\'97\'97 How to use \'97\'97\'97\'97\'97\
\
After adding the framework into the project by following the installation guide, for using the framework you should follow this steps:\
\
1) Open your project AppDelegate.m file and in 
\f1\fs22 \CocoaLigature0 didFinishLaunchingWithOptions method register for local notifications:\
 	ex: \
\
	UIUserNotificationType types = UIUserNotificationTypeBadge | UIUserNotificationTypeSound | 								 UIUserNotificationTypeAlert;\
    UIUserNotificationSettings *mySettings = [UIUserNotificationSettings settingsForTypes:types 											                          categories:nil];\
    [[UIApplication sharedApplication] registerUserNotificationSettings:mySettings];\
\
2) After that, you should save your campaign tags in NSUserDefaults:\
	NSArray *tags = [[NSUserDefaults standardUserDefaults] valueForKey:@"YourPrefferedKeyForTags"];\
    if (tags == nil) \{\
        tags = @[@"myCampaignTag1",@"myCampaignTag2"];\
        [[NSUserDefaults standardUserDefaults] setObject:tags forKey:@"YourPrefferedKeyForTags"];\
    \}\
\
3) Next step is to initialize SDK with API key and tags by using initializeWithAPIKey method. If you don't have an API Key please follow "Optain API Key" guide.\
	For using the library you should add the following import: #import <Publistats/Publistats.h>\
\
	// Initialize with API key\
	[Publistats initializeWithAPIKey:@"yourApiKey" tags:tags debug:YES]; // TODO: remove debug parameter.\
\
4) Now that the sdk is initialized we should Handle launching from a notification by adding:\
\
	 [Publistats application:application didFinishLaunchingWithOptions:launchOptions];\
\
5) In application:(UIApplication *)application didReceiveLocalNotification:(UILocalNotification *)localNotification method we should handle pulblistats notification by adding: \
\
	[Publistats application:application didReceiveLocalNotification:localNotification]; // TODO: Handle this in publistats SDK.\
\
6) Final step is for allowing SDK to refresh campaign, for this add the following method to AppDelegate.m file:\
\
	- (void)application:(UIApplication *)application performFetchWithCompletionHandler:(void (^)	(UIBackgroundFetchResult))completionHandler \{\
  	  // Allow publistats SDK to refresh campaing\
   	 [Publistats syncCampaingsWithCompletion:^\{\
        	completionHandler(UIBackgroundFetchResultNewData);\
    		\}];\
	\}\
\
Build and run.\
}